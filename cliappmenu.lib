#!/bin/bash
#
# Â©2024 Copyright 2024 Robert D. Chin
# Email: RDevChin@Gmail.com
#
# Usage: source menu_module_main.lib
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# +----------------------------------------+
# |        Default Variable Values         |
# +----------------------------------------+
#
VERSION="2024-02-20 00:33"
#
# Set THIS_FILE_LIB to the name of this script library.
THIS_FILE_LIB=$(basename $0)
#
# +----------------------------------------+
# |            Brief Description           |
# +----------------------------------------+
#
#& Brief Description
#&
#& This Library of functions for the Demonstration Menu is a
#& child dependency used by the following scripts.
#&
#& Parent script: cliappmenu.sh.
#&
#& See script cliappmenu.sh for Edit History.
#&
#& Usage: source cliappmenu.lib
#&
#&    This program is free software: you can redistribute it and/or modify
#&    it under the terms of the GNU General Public License as published by
#&    the Free Software Foundation, either version 3 of the License, or
#&    (at your option) any later version.
#&
#&
#&    This program is distributed in the hope that it will be useful,
#&    but WITHOUT ANY WARRANTY; without even the implied warranty of
#&    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#&    GNU General Public License for more details.
#&
#&    You should have received a copy of the GNU General Public License
#&    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# +----------------------------------------+
# |           Code Change History          |
# +----------------------------------------+
#
## Code Change History
##
## (Please see script "menu.sh" for Code History information.)
#
# +--------------------------------------------------------------------------+
# |                                                                          |
# |                 Customize Menu choice options below.                     |
# |                                                                          |
# +--------------------------------------------------------------------------+
#
#                 >>> !!!Warning!!! <<<
#
# The Menu Item Descriptions cannot have semi-colons, colons, asterisks,
# single-quotes (apostrophes), double-quotes, ampersands, greater-than
# and less-than signs.
#
# Forbidden characters include ; : * ' " & > < \
#
# These characters will compromise the creation of arrays which
# in turn creates the menu.
#
# Note: The single-quotes (') and double-quotes (") and back-slashes (\)
#       are ignored when the arrays are created, even if they are included
#       in the Menu Item Description.
#
# General Format: <#@@> <Menu Option> <#@@> <Description of Menu Option> <#@@> <Corresponding function or action or command>
#
# Format of <Corresponding function or action or command> when using f_menu_main_all_menus.
#        f_menu_main_all_menus^"text", "dialog", or "whiptail"^Menu Name^Library name containing menu entries
#
# There are two components involving a consistent Menu Title:
# 1. The comment line "Start Listing <Menu Title> Menu".
# 2. The comment line "End Listing" <Menu Title> Menu.
#
# In these two components the <Menu Title> must be the same,
# otherwise an error will occur (see "Debugging Hint").
#
# For a menu with a sub-menu:
# The comment line with the sub-menu data must also have the correct <Menu Title>.
# otherwise an error will occur (see "Debugging Hint").
#
#
# DEBUGGING HINT:
#
# Note: ***If Menu title contains spaces,
#       ***the size of the menu window will be too narrow.
# Menu title MUST use underscores instead of spaces.
#
# If the script hangs or ceases to respond after you select a menu choice
# which is invoking a sub-menu, or if you see any of these error messages,
# then there is an error in a menu on a line item beginning with "#@@" which
# has the sub-menu title.
#
# sed: -e expression #1, char 1: unknown command: `,'
# /home/USER/common_bash_function.lib: line 3546: /home/USER/cliappmenu.sh_temp.txt: No such file or directory
# /home/USER/common_bash_function.lib: line 3510: /home/USER/cliappmenu.sh_temp.txt: No such file or directory
#
# This may mean that the sub-menu title in the line item does not correspond
# to the actual title as cited in the comment:
# "Start Listing <Menu Title> Menu" and "End Listing" <Menu Title> Menu.
# Or that the <Menu Title> in the comments do not match and are not the same.
#
#! +--------------------------------------------------------------+
#! | Start Listing CLI Action Menu                                |
#! |               (Required header, do not delete).              |
#! +--------------------------------------------------------------+
#
#
#@@Exit#@@Exit this menu.#@@break
#
#@@Applications#@@Run an application.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_applications_generated.txt"^CLI_Application_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_applications_items_generated.txt"^$THIS_DIR/cliappmenu.lib
#
#@@Favorites#@@Menu of favorite applications.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_favorites_generated.txt"^Favorites_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_favorites_generated.txt"^$CLI_DIR/cli-favorites.lib
#
#@@Search#@@Find and run an application in active menus.#@@f_main_search^$GUI
#
#@@Configure#@@Update software, manage modules, change colors, etc.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_configuration_generated.txt"^Configuration_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_configuration_generated.txt"^$THIS_DIR/cliappmenu.lib
#
#@@Information#@@About, version, documentation, code history, license.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_information_generated.txt"^Information_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_information_generated.txt"^$THIS_DIR/cliappmenu.lib
#
#@@Version Update#@@Check for updates to this script and download.#@@f_check_version^$GUI
#
#@@Help#@@Display help message.#@@f_help_message^$GUI
#
#! End Listing CLI Action Menu (Required line, do not delete).
#
#! +--------------------------------------------------------------+
#! | Start Listing CLI Application Menu                           |
#! |               (Required header, do not delete).              |
#! +--------------------------------------------------------------+
#
#@@Return#@@Return to previous menu.#@@break
#
#@@Audio#@@Music players, editors, utilities.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_audio_generated.txt"^Audio_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_audio_items_generated.txt"^$CLI_DIR/apps_audio.lib
#
#@@Databases#@@General and specialized databases.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_databases_generated.txt"^Database_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_databases_items_generated.txt"^$CLI_DIR/apps_databases.lib
#
#@@Development#@@Tools to test code and track/report bugs.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_development_generated.txt"^Development_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_development_items_generated.txt"^$CLI_DIR/apps_development.lib
#
#@@Education#@@Learn something.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_education_generated.txt"^Education_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_education_items_generated.txt"^$CLI_DIR/apps_education.lib
#
#@@Environment#@@Command Line shell and GUI, DOS and Nintendo emulators.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_environment_generated.txt"^Environment_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_environment_items_generated.txt"^$CLI_DIR/apps_environment.lib
#
#@@Files#@@Manage, backup, compare, edit, encrypt, find, files/dirs.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_file_generated.txt"^Files_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_file_items_generated.txt"^$CLI_DIR/apps_file.lib
#
#@@Games#@@Fun time! Games, movies, and screen-savers.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_games_generated.txt"^Games_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_games_items_generated.txt"^$CLI_DIR/apps_games.lib
#
#@@Graphics#@@View images and graphics files.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_graphics_generated.txt"^Graphics_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_graphics_items_generated.txt"^$CLI_DIR/apps_graphics.lib
#
#@@Internet#@@Web, e-mail, chat, IM, RSS, ftp, torrents, etc.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_internet_generated.txt"^Internet_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_internet_items_generated.txt"^$CLI_DIR/apps_internet.lib
#
#@@Network#@@Wireless connection, network monitoring, tools.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_network_generated.txt"^Network_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_network_items_generated.txt"^$CLI_DIR/apps_network.lib
#
#@@Office#@@Editors, spreadsheets, presenter, organize, calcs, acctg.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_office_generated.txt"^Office_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_office_items_generated.txt"^$CLI_DIR/apps_office.lib
#
#@@Packages#@@(Un)Install and manage software packages and applications.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_packages_generated.txt"^Packages_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_packages_items_generated.txt"^$CLI_DIR/apps_packages.lib
#
#@@Screens#@@Multiple screen sessions and terminal emulators.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_screens_generated.txt"^Screens_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_screens_items_generated.txt"^$CLI_DIR/apps_screens.lib
#
#@@Screen-savers#@@For when youre away.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_screensavers_generated.txt"^Screen-savers_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_screensavers_items_generated.txt"^$CLI_DIR/apps_screensavers.lib
#
#@@Screen-Tools#@@Screen capture, record/play-back of screen activity etc.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_screen_tools_generated.txt"^Screen-Tools_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_screen_tools_items_generated.txt"^$CLI_DIR/apps_screen_tools.lib
#
#@@System#@@Monitor system processes, resources, utilities, etc.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_system_generated.txt"^System_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_system_items_generated.txt"^$CLI_DIR/apps_system.lib
#
#@@Video#@@Video players, editors, utilities.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_apps_video_generated.txt"^Video_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_apps_video_items_generated.txt"^$CLI_DIR/apps_video.lib
#
#! End Listing CLI Application Menu (Required line, do not delete).
#
#! +--------------------------------------------------------------+
#! | Start Listing Configuration Menu                             |
#! |               (Required header, do not delete).              |
#! +--------------------------------------------------------------+
#
#@@Return#@@Return to previous menu.#@@break
#
#@@CLI Font Colors#@@Configure Command-Line Interface font colors.#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_config_cli_font_color_generated.txt"^CLI_Font_Color_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_config_cli_font_color_items_generated.txt"^$CLI_DIR/cli-common.lib
#
#@@User Interface#@@Change UI to Text, Whiptail, or Dialog#@@f_create_a_menu_cliappmenu^$GUI^$CLI_DIR/$THIS_FILE_LIB"_config_ui_generated.txt"^User-Interface_Menu^$TEMP_FILE^$CLI_DIR/$THIS_FILE_LIB"_config_ui_items_generated.txt"^$CLI_DIR/cli-common.lib
#
#@@Show configuration#@@Show configuration file .cliappmenu.cfg.#@@f_configure_show^$GUI#@@0^0^0^0^0
#
#! End Listing Configuration Menu (Required line, do not delete).
#
#! +--------------------------------------------------------------+
#! | Start Listing Information Menu                               |
#! |               (Required header, do not delete).              |
#! +--------------------------------------------------------------+
#
#@@Return#@@Return to previous menu.#@@break
#
#@@About#@@Version information of this script#@@f_about_cliappmenu^$GUI
#
#@@License#@@Licensing, GPL.#@@f_main_license^$GUI
#
#@@Version History#@@Version/Release history with general summaries.#@@f_main_version_history^$GUI
#
#@@Code History#@@Display code change history of this script.#@@f_code_history_cliappmenu^$GUI
#
#@@Programmer Notes#@@Script documentation README, HOW-TOs.#@@f_main_readme^$GUI
#
#! End Listing Information Menu (Required line, do not delete).
#
# +----------------------------------------+
# |        Function f_check_version        |
# +----------------------------------------+
#
#     Rev: 2024-01-16
#  Inputs: $1 - "text", "dialog" or "whiptail" the command-line user-interface in use.
#          $2 - [OPTIONAL] File name to compare.
#          $3 - [OPTIONAL] 1=Silent mode.
#          FILE_TO_COMPARE.
#    Uses: SERVER_DIR, MP_DIR, LOCAL_REPO_DIR, $FILE_TO_COMPARE, FILE_LIST,
#          VERSION, TEMP_FILE, ERROR.
# Outputs: ERROR.
#
# Summary: Check the version of a single, local file or script,
#          FILE_TO_COMPARE with the version of repository file.
#          If the repository file has latest version, then copy all
#          dependent files and libraries from the repository to local PC.
#
# TO DO enhancement: If local (LAN) repository is unavailable, then
#          connect to repository on the web if available.
#
# Dependencies: f_version_compare.
#
f_check_version () {
      #
      #
      #=================================================================
      # EDIT THE LINES BELOW TO DEFINE THE LAN FILE SERVER DIRECTORY,
      # LOCAL MOUNTPOINT DIRECTORY, LOCAL REPOSITORY DIRECTORY AND
      # FILE TO COMPARE BETWEEN THE LOCAL PC AND (LAN) LOCAL REPOSITORY.
      #=================================================================
      #
      #
      # LAN File Server shared directory.
      # SERVER_DIR="[FILE_SERVER_DIRECTORY_NAME_GOES_HERE]"
        SERVER_DIR="//file_server/files"
      #
      # Local PC mount-point directory.
      # MP_DIR="[LOCAL_MOUNT-POINT_DIRECTORY_NAME_GOES_HERE]"
        MP_DIR="/mnt/file_server/files"
      #
      # Local PC mount-point with LAN File Server Local Repository full directory path.
      # Example:
      #                   File server shared directory is "//file_server/files".
      # Repository directory under the shared directory is "scripts/BASH/Repository".
      #                 Local PC Mount-point directory is "/mnt/file_server/files".
      #
      # Local PC mount-point with LAN File Server Local Repository full directory path.
      # LOCAL_REPO_DIR="$MP_DIR/[DIRECTORY_PATH_TO_LOCAL_REPOSITORY]"
        LOCAL_REPO_DIR="$MP_DIR/LIBRARY/PC-stuff/PC-software/BASH_Scripting_Projects/Repository"
      #
      # Local PC file to be compared.
      if [ $# -eq 2 ] ; then
         # There are 2 arguments that have been passed to this function.
         # $2 contains the file name to compare.
         FILE_TO_COMPARE=$2
      else
         # $2 is null, so specify file name.
         if [ -z "$FILE_TO_COMPARE" ] ; then
            # FILE_TO_COMPARE is undefined so specify file name.
            FILE_TO_COMPARE=$(basename $0)
         fi
      fi
      #
      # Version of Local PC file to be compared.
      VERSION=$(grep --max-count=1 "VERSION" $FILE_TO_COMPARE)
      #
      # Initialize variables.
      FILE_LIST=$THIS_DIR/$THIS_FILE"_file_temp.txt"
      ERROR=0
      #
      # Delete any existing file.
      # This assures that FILE_LIST is not appended to but is newly created
      # in the code below. Added because typo may occur when using redirection
      # where typo ">>" is used instead of ">" at FILE NAME1.
      # i.e. typo at echo "[ FILE NAME1 GOES HERE ]"  >> $FILE_LIST
      if [ -e $FILE_LIST ] ; then
         rm $FILE_LIST
      fi
      #
      #
      #=================================================================
      # EDIT THE LINES BELOW TO SPECIFY THE FILE NAMES TO UPDATE.
      # FILE NAMES INCLUDE ALL DEPENDENT SCRIPTS AND LIBRARIES.
      #=================================================================
      #
      #
      # Create list of files to update and write to temporary file, FILE_LIST.
      #
      echo "cliappmenu.sh"                 > $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "cliappmenu.lib"               >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_audio.lib"               >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_databases.lib"           >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_development.lib"         >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_education.lib"           >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_environment.lib"         >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_file.lib"                >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_games.lib"               >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_graphics.lib"            >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_internet.lib"            >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_network.lib"             >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_office.lib"              >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_packages.lib"            >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_screensavers.lib"        >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_screens.lib"             >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_screen_tools.lib"        >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_system.lib"              >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "apps_video.lib"               >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "cli-common.lib"               >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "cli-favorites.lib"            >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "cli-web-sites.lib"            >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "COPYING"                      >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "EDIT_HISTORY"                 >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "LICENSE"                      >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "main_search_results.lib.save" >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "README"                       >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "README.md"                    >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      echo "common_bash_function.lib"     >> $FILE_LIST  # <<<--- INSERT ACTUAL FILE NAME HERE.
      #
      f_version_compare $1 "$SERVER_DIR" "$MP_DIR" "$LOCAL_REPO_DIR" "$FILE_TO_COMPARE" "$VERSION" "$FILE_LIST" $3
      #
      if [ -r  $FILE_LIST ] ; then
         rm  $FILE_LIST
      fi
      #
      unset FILE_LIST
      #
}  # End of function f_check_version_TEMPLATE.
#
# +----------------------------------------+
# |        Function f_about_cliappmenu     |
# +----------------------------------------+
#
#  Inputs: $1=GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display first sub-menu.
#
# Dependencies: f_menu_arrays, f_create_show_menu.
#
f_about_cliappmenu () {
      #
      # Display "About" text Brief Summary of this script.
      f_about $1 "OK"
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
}  # End of function f_about_cliappmenu.
#
# +----------------------------------------+
# |          Function f_main_license       |
# +----------------------------------------+
#
#  Inputs: $1=GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display first sub-menu.
#
# Dependencies: f_menu_arrays, f_create_show_menu.
#
f_main_license () {
      #
      TEMP_FILE="$CLI_DIR/main_information_temp.txt"
      #
      # GPL Documentation is in the text file "COPYING".
      cat $CLI_DIR/COPYING > $TEMP_FILE
      f_message $1 "OK" "General Public License" $TEMP_FILE
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
}  # End of function f_main_license.
#
# +----------------------------------------+
# |           Function f_main_readme       |
# +----------------------------------------+
#
#  Inputs: $1=GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display first sub-menu.
#
# Dependencies: f_menu_arrays, f_create_show_menu.
#
f_main_readme () {
      #
      TEMP_FILE="$CLI_DIR/main_information_temp.txt"
      #
      sed -n 's/^#://'p $CLI_DIR/README > $TEMP_FILE
      f_message $1 "OK" "README" $TEMP_FILE
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
}  # End of function f_main_readme.
#
# +----------------------------------------+
# |      Function f_main_version_history   |
# +----------------------------------------+
#
#  Inputs: $1=GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display first sub-menu.
#
# Dependencies: f_menu_arrays, f_create_show_menu.
#
f_main_version_history () {
      #
      TEMP_FILE="$CLI_DIR/main_information_temp.txt"
      #
      sed -n 's/^##//'p $CLI_DIR/EDIT_HISTORY > $TEMP_FILE
      f_message $1 "OK" "VERSION HISTORY" $TEMP_FILE
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
}  # End of function f_main_version_history.
#
# +----------------------------------------+
# |    Function f_code_history_cliappmenu  |
# +----------------------------------------+
#
#  Inputs: $1=GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display first sub-menu.
#
# Dependencies: f_menu_arrays, f_create_show_menu.
#
f_code_history_cliappmenu () {
      #
      # Display "Code History" text of technical changes to this script.
      f_code_history $1 "OK"
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
}  # End of function f_code_history_cliappmenu.
#
# +----------------------------------------+
# |         Function f_main_search         |
# +----------------------------------------+
#
#     Rev: 2021-06-30
#  Inputs: $1 - $GUI.
#    Uses: None.
# Outputs: APP_NAME.
#
# Summary: Prompt for a full/partial application name.
#
# Dependencies: f_search_app_add, f_message.
#
f_main_search () {
      #
      TEMP_FILE="$CLI_DIR/main_search_temp.txt"
      #
      # Recover the saved copy of library since it is deleted automatically
      # when the user exits from the script, cliappmenu.sh.
      if [ -e $CLI_DIR/main_search_results.lib.save ] ; then
         cp $CLI_DIR/main_search_results.lib.save $CLI_DIR/main_search_results.lib
      fi
      #
      # Reset Search Results Menu to null results.
      # Delete all menu option items.
      sed -i "/^#@@*/d" $CLI_DIR/main_search_results.lib
      #
      # Add menu option "Return to previous menu."
      sed -i "/# Format:*/a #@@Return#@@Return to previous menu.#@@break" $CLI_DIR/main_search_results.lib
      #
      case $1 in
           dialog | whiptail)
              $1 --title "Enter Name of Application" --cancel-button Exit --inputbox "Enter the full or partial name of the application.\nTo quit, press 'Enter' key.\n\nSearch for:" 12 70 2>$TEMP_FILE
              ERROR=0
              APP_NAME=$(cat $TEMP_FILE)
              #
           ;;
           text)
              echo
              echo "Enter Name of Application"
              echo
              echo
              echo "Enter the full or partial name of the application."
              echo "To quit, press 'Enter' key."
              echo
              echo -n "Search for: "
              read APP_NAME
              echo
              echo
           ;;
      esac
      #
      if [ -n "$APP_NAME" ] ; then
         f_search_app_add $1 $APP_NAME
         #
         if [ $1 = "text" ] ; then
            # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
            # Why needed? Function f_message uses application "Less" to display pages of text.
            # But "Less" resets the terminal's colors to white on black.
            f_configure_use
         fi
      else
         f_message $1 "OK" "Search again" "No application name entered, please search again."
      fi
      #
      # Save a copy of library since it is deleted automatically
      # when the user exits from the script, cliappmenu.sh.
      if [ -e $CLI_DIR/main_search_results.lib ] ; then
         cp $CLI_DIR/main_search_results.lib $CLI_DIR/main_search_results.lib.save
      fi
      #

      #
      # Delete TEMP_FILE, if it exists.
      TEMP_FILE="$CLI_DIR/main_search_temp.txt"
      if [ -e $TEMP_FILE ] ; then
         rm $TEMP_FILE
      fi
      #
} # End of function f_main_search
#
# +----------------------------------------+
# |        Function f_search_app_add       |
# +----------------------------------------+
#
#     Rev: 2021-06-30
#  Inputs: $1 - GUI.
#          $2 - APP_NAME.
#
#    Uses: None.
# Outputs: None.
#
# Summary: Display detailed error message for corresponding error code.
#
# Dependencies: f_message, f_yn_question, f_display_error_code.
#
f_search_app_add () {
      #
      APP_NAME=$2
      TEMP_FILE="$CLI_DIR/main_search_temp.txt"
      TEMP_FILE_2="$CLI_DIR/main_search_temp2.txt"
      TEMP_FILE_3="$CLI_DIR/main_search_temp3.txt"
      #
      # Get menu item data. grep -h prevents the printing of the file name before the results.
      grep  "#@@$APP_NAME" $CLI_DIR/apps_*.lib > $TEMP_FILE
      awk -F ":" '{ print $1 }' $TEMP_FILE > $TEMP_FILE_2
      awk -F ":" '{ print $2 }' $TEMP_FILE > $TEMP_FILE_3
      #
      # Save error flag condition.
      ERROR=$?
      # Error code 2 means grep had an error.
      # Error code 1 means grep did not find any matches.
      # Error code 0 (zero) where $?=0 means grep found matches.
      #
      #less $TEMP_FILE_2             # Diagnostic line.
      #
      #less $TEMP_FILE_3             # Diagnostic line.
      #
      case $ERROR in
           0)
              # Copy menu item data into Search Results menu.
              while read LINE
                  do
                     # Insert string before "# End of Custom Menu choice options.".
                     sed -i "/#! End Listing Search Results Menu (Required line, do not delete)./i $LINE" $CLI_DIR/main_search_results.lib
                     let ERROR=$ERROR+$?
                  done < $TEMP_FILE_3
              #
              # Insert command source [Library] into Search Results Menu.
              # Insert string LINE after "# Additional libraries below. DO NOT DELETE THIS COMMENT LINE."
              while read LINE
                  do
                     sed -i "/# Beginning of Additional Libraries below. DO NOT DELETE THIS COMMENT LINE./a source $LINE" $CLI_DIR/main_search_results.lib
                     let ERROR=$ERROR+$?
                  done < $TEMP_FILE_2
              #
              #--------------------------------------------------
              # The Search Results Menu was successfully updated.
              #--------------------------------------------------
              #
              # Display updated Search Results Menu.
              f_main_search_menu $1
              # Note: f_main_search_menu redefines TEMP_FILE to a different
              #       file name, "cliappmenu_main_search_results_temp.txt".
              #
              # Change file name back to the original name.
              TEMP_FILE="$CLI_DIR/main_search_temp.txt"
              #
              # Done searching... Re-initialize Search Results Menu.
              # Reset Search Results Menu to null results.
              # Delete all menu option items.
              sed -i "/^#@@*/d" $CLI_DIR/main_search_results.lib
              #
              # Add menu option "Return to previous menu."
              sed -i "/# Beginning of Menu item list. DO NOT DELETE THIS COMMENT LINE./a #@@Return#@@Return to previous menu.#@@break" $CLI_DIR/main_search_results.lib
              #
              # Delete added sourced libraries.
              sed -i '/source/d' cliapp-dir/main_search_results.lib
              #
              # Restore original source library.
              #sed -i "/# Beginning of Additional Libraries below. DO NOT DELETE THIS COMMENT LINE./a source $CLI_DIR/cli-common.lib" $CLI_DIR/main_search_results.lib
              #
              if [ -e $CLI_DIR/cliappmenu_main_search_results_temp.txt ] ; then
                 rm $CLI_DIR/cliappmenu_main_search_results_temp.txt
              fi
              #
              if [ -e $TEMP_FILE ] ; then
                 rm $TEMP_FILE
              fi
              #
              if [ -e $TEMP_FILE_2 ] ; then
                 rm $TEMP_FILE_2
              fi
              #
              if [ -e $TEMP_FILE_3 ] ; then
                 rm $TEMP_FILE_3
              fi
              #
           ;;
           1)
               f_message $1 "OK" "No Search Results" "Application name not found."
           ;;
           2)
               f_message $1 "OK" "Search Results Menu Not Updated" "The Search Results Menu was not updated.\nAn error occurred."
           ;;
      esac
} # End of function f_search_app_add.
#
# +----------------------------------------+
# |       Function f_main_search_menu      |
# +----------------------------------------+
#
#  Inputs: $1=GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display first sub-menu.
#
# Dependencies: f_menu_arrays, f_create_show_menu.
#
f_main_search_menu () {
      #
      GENERATED_FILE="$CLI_DIR/main_search_results.lib.generated"
      #
      # Create generated menu script from array data.
      #
      MENU_TITLE="Search Results Menu"
      #
      #
      # Menu title change spaces to underscores.
      MENU_TITLE=$(echo $MENU_TITLE | tr ' ' '_')
      #
      # Note: ***If Menu title contains spaces,
      #       ***the size of the menu window will be too narrow.
      #
      TEMP_FILE="$CLI_DIR/main_search_results_temp.txt"
      #
      # Create arrays from data.
      ARRAY_FILE="$CLI_DIR/main_search_results.lib"
      f_menu_arrays $ARRAY_FILE
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
      # Create generated menu script from array data.
      f_create_show_menu $1 $GENERATED_FILE $MENU_TITLE $MAX_LENGTH $MAX_LINES $MAX_CHOICE_LENGTH $TEMP_FILE
      #
}  # End of function main_search_menu.
#
# +----------------------------------------+
# |            Function f_config           |
# +----------------------------------------+
#
#  Inputs: $1 - Search term: "FCOLOR" or "GUI" (literal string, not variables).
#    Uses: None.
# Outputs:  File ~/.cliappmenu.cfg created or over-written with new settings.
#
# Summary: Run configuration function to apply configuration settings.
#
# Dependencies: f_main_config (within file ~/.cliappmenu.cfg).
#
f_config () {
      #
      # Does configuration file exist and is readable
      grep --quiet $1 .cliappmenu.cfg 2> /dev/null
      ERROR=$?
      # grep results:
      # 0=text found.
      # 1=text not found.
      # 2=file does not exist.
      #
      case $ERROR in
           0)
              # Configuration file exists and has initial GUI and color values.
              #
              # Run configuration function to apply configuration.
              #
              # Source the configuration text file containing function f_main_config.
              source ~/.cliappmenu.cfg
              #
              # Run function f_main_config within file ~/.cliappmenu.cfg to set the
              # variables GUI, FCOLOR, BCOLOR.
              f_main_config
           ;;
           1)
              case $1 in
                   FCOLOR)
                      # Configuration file exists but has no initial color values. Set initial color values.
                      # Insert string FCOLOR="Green" ; BCOLOR="Black" before the "}" end of function designator.
                      #sed -i '/      # Define Colors below - DO NOT DELETE THIS LINE./a indentFCOLOR="Green" ; BCOLOR="Black"' ~/.cliappmenu.cfg
                      sed -i "/      # Define Colors below - DO NOT DELETE THIS LINE./a indentFCOLOR=\"$1\" ; BCOLOR=\"$2\"" ~/.cliappmenu.cfg
                      sed -i 's/indent/      /g' ~/.cliappmenu.cfg
                   ;;
                   GUI)
                      # Configuration file exists but has no initial UI value. Set GUI to current UI.
                      # Insert string GUI="$GUI" before the "}" end of function designator).
                      #sed -i '/      # Define GUI below - DO NOT DELETE THIS LINE./a indentGUI="$GUI"' ~/.cliappmenu.cfg
                      sed -i "/      # Define GUI below - DO NOT DELETE THIS LINE./a indentGUI=\"$1\"" ~/.cliappmenu.cfg
                      sed -i 's/indent/      /g' ~/.cliappmenu.cfg
                   ;;
              esac
              #
              # Run configuration function to apply configuration.
              # Source the configuration text file containing function f_main_config.
              source ~/.cliappmenu.cfg
              #
              # Run function f_main_config within file ~/.cliappmenu.cfg to set the
              # variables GUI, FCOLOR, BCOLOR.
              f_main_config
           ;;
           2)
              # Configuration file does not exist. Create configuration file.
              echo "f_main_config () {" > ~/.cliappmenu.cfg
              echo "      #" >> ~/.cliappmenu.cfg
              echo "      # GUI - text, dialog, or whiptail." >> ~/.cliappmenu.cfg
              echo "      #" >> ~/.cliappmenu.cfg
              echo "      # Define GUI below - DO NOT DELETE THIS LINE." >> ~/.cliappmenu.cfg
              echo "      GUI=\"$GUI\"" >> ~/.cliappmenu.cfg
              echo "      #" >> ~/.cliappmenu.cfg
              echo "      # FCOLOR - Font Color." >> ~/.cliappmenu.cfg
              echo "      # BCOLOR - Background Color." >> ~/.cliappmenu.cfg
              echo "      #" >> ~/.cliappmenu.cfg
              echo "      # Define Colors below - DO NOT DELETE THIS LINE." >> ~/.cliappmenu.cfg
              echo "      FCOLOR=\"Green\" ; BCOLOR=\"Black\"" >> ~/.cliappmenu.cfg
              echo "      #" >> ~/.cliappmenu.cfg
              echo "} # End of function f_main_config" >> ~/.cliappmenu.cfg
              #
              # Run configuration function to apply configuration.
              # Source the configuration text file containing function f_main_config.
              source ~/.cliappmenu.cfg
              #
              # Run function f_main_config within file ~/.cliappmenu.cfg to set the
              # variables GUI, FCOLOR, BCOLOR.
              f_main_config
           ;;
      esac
      #
} # End of function f_config
#
# +----------------------------------------+
# |   Function f_config_update_font_color  |
# +----------------------------------------+
#
#  Inputs: $1 - FCOLOR
#          $2 - BCOLOR
#    Uses: None.
# Outputs: File ~/.cliappmenu.cfg over-written with new settings.
#
# Summary: Update configuration function with new font color settings.
#
# Dependencies: f_main_config (within file ~/.cliappmenu.cfg).
#
f_config_update_font_color () {
      #
      # Update Configuration File: ~/.cliappmenu.conf
      # to save user chosen colors.
      #
      # Delete old settings of FCOLOR, BCOLOR variables.
      sed -i '/FCOLOR=.*/d' ~/.cliappmenu.cfg
      #
      # Add new settings of FCOLOR, BCOLOR variables.
      # Insert new color settings below line with "Define Colors below".
      sed -i "/      # Define Colors below - DO NOT DELETE THIS LINE./a indentFCOLOR=\"$1\" ; BCOLOR=\"$2\"" ~/.cliappmenu.cfg
      #
      # Format indentation of code.
      sed -i 's/indent/      /g' ~/.cliappmenu.cfg
      #
      # Run configuration function to apply configuration.
      # Source the configuration text file containing function f_main_config.
      source ~/.cliappmenu.cfg
      #
      # Run function f_main_config within file ~/.cliappmenu.cfg to set the
      # variables GUI, FCOLOR, BCOLOR.
      f_main_config
      #
} # End of function f_config_update_font_color
#
# +----------------------------------------+
# |        Function f_config_update_ui     |
# +----------------------------------------+
#
#  Inputs: $1 - GUI
#    Uses: None.
# Outputs: File ~/.cliappmenu.cfg over-written with new settings.
#
# Summary: Update configuration function with new UI settings.
#
# Dependencies: f_main_config (within file ~/.cliappmenu.cfg).
#
f_config_update_ui () {
      #
      # Update Configuration File: ~/.cliappmenu.conf
      # to save user chosen colors.
      #
      # Delete old settings of FCOLOR, BCOLOR variables.
      sed -i '/GUI=.*/d' ~/.cliappmenu.cfg
      #
      # Add new setting of GUI variable.
      # Insert new GUI settings below line with "Define GUI below".
      sed -i "/      # Define GUI below - DO NOT DELETE THIS LINE./a indentGUI=\"$1\"" ~/.cliappmenu.cfg
      #
      # Format indentation of code.
      sed -i 's/indent/      /g' ~/.cliappmenu.cfg
      #
      # Run configuration function to apply configuration.
      # Source the configuration text file containing function f_main_config.
      source ~/.cliappmenu.cfg
      #
      # Run function f_main_config within file ~/.cliappmenu.cfg to set the
      # variables GUI, FCOLOR, BCOLOR.
      f_main_config
      #
} # End of function f_config_update_ui
#
# +----------------------------------------+
# |        Function f_configure_show       |
# +----------------------------------------+
#
#  Inputs: $1 - GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Display the configuration file containing the function and settings.
#
# Dependencies: f_message, f_configure_use.
#
f_configure_show () {
      #
      if [ -e ~/.cliappmenu.cfg ] ; then
         cat ~/.cliappmenu.cfg > $TEMP_FILE
      fi
      #
      f_message $1 "OK" "Display ~/.cliappmenu.cfg" $TEMP_FILE
      #
      if [ $1 = "text" ] ; then
         # Restore user-selected CLI colors to terminal. Not applicable for "Dialog" or "Whiptail".
         # Why needed? Function f_message uses application "Less" to display pages of text.
         # But "Less" resets the terminal's colors to white on black.
         f_configure_use
      fi
      #
} # End of function f_update_config_file
#
# +----------------------------------------+
# |         Function f_configure_use       |
# +----------------------------------------+
#
#  Inputs: $1 - GUI.
#    Uses: None.
# Outputs: None.
#
# Summary: Run the configuration function to apply the settings.
#
# Dependencies: f_main_config, f_term_color.
#
f_configure_use () {
      #
      # Source configuration file.
      source ~/.cliappmenu.cfg
      #
      # Run configuration function within hidden file ~/.cliappmenu.cfg
      # to apply configuration.
      f_main_config
      #
      # Change text font colors.
      f_term_color $FCOLOR $BCOLOR
      #
} # End of function f_configure_use
#
